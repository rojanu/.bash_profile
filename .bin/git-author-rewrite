#!/bin/sh
usage()
{
cat << EOF
usage: $0 options

Warning: This action is destructive to your repository's history. If you're collaborating on a repository with others, it's considered bad practice to rewrite published history. You should only do this in an emergency.

Changing author info

To change the name and/or email address recorded in existing commits, you must rewrite the entire history of your Git repository.

$ git clone --bare https://github.com/user/repo.git
$ cd repo.git
$ git-author-rewrite -o oldemail@test.com -n newname -e newemail@test.com
$ # Check git log for errors
$ git log
$ git push --force --tags origin 'refs/heads/*'

OPTIONS:
   -h      Show this message
   -o      Old user email used in commits to be changed
   -n      New user name
   -e      New user email
EOF
}

OLD_EMAIL=
CORRECT_NAME=
CORRECT_EMAIL=
while getopts "ho:n:e:" OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         o)
             OLD_EMAIL=$OPTARG
             ;;
         n)
             CORRECT_NAME=$OPTARG
             ;;
         e)
             CORRECT_EMAIL=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [[ -z $OLD_EMAIL ]] || [[ -z $CORRECT_NAME ]] || [[ -z $CORRECT_EMAIL ]]
then
     usage
     exit 1
fi
git filter-branch --env-filter '

if [ "$GIT_COMMITTER_EMAIL" = "'$OLD_EMAIL'" ]
then
    export GIT_COMMITTER_NAME="'$CORRECT_NAME'"
    export GIT_COMMITTER_EMAIL="'$CORRECT_EMAIL'"
fi
if [ "$GIT_AUTHOR_EMAIL" = "'$OLD_EMAIL'" ]
then
    export GIT_AUTHOR_NAME="'$CORRECT_NAME'"
    export GIT_AUTHOR_EMAIL="'$CORRECT_EMAIL'"
fi
' --tag-name-filter cat -- --branches --tags

echo If all looks well in "git log" force push using "git push --force --tags origin 'refs/heads/*'"
